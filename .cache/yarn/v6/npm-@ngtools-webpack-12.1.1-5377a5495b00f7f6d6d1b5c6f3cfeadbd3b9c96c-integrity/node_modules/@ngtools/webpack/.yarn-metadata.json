{
  "manifest": {
    "name": "@ngtools/webpack",
    "version": "12.1.1",
    "description": "Webpack plugin that AoT compiles your Angular components and modules.",
    "main": "./src/index.js",
    "typings": "src/index.d.ts",
    "license": "MIT",
    "keywords": [
      "angular",
      "Angular CLI",
      "devkit",
      "sdk",
      "Angular DevKit",
      "webpack",
      "plugin",
      "aot"
    ],
    "repository": {
      "type": "git",
      "url": "https://github.com/angular/angular-cli.git"
    },
    "author": {
      "name": "Angular Authors"
    },
    "bugs": {
      "url": "https://github.com/angular/angular-cli/issues"
    },
    "homepage": "https://github.com/angular/angular-cli",
    "dependencies": {
      "enhanced-resolve": "5.8.2"
    },
    "peerDependencies": {
      "@angular/compiler-cli": "^12.0.0 || ^12.1.0-next",
      "typescript": "~4.2.3 || ~4.3.2",
      "webpack": "^5.30.0"
    },
    "engines": {
      "node": "^12.14.1 || >=14.0.0",
      "npm": "^6.11.0 || ^7.5.6",
      "yarn": ">= 1.13.0"
    },
    "_registry": "npm",
    "_loc": "/usr/src/app/.cache/yarn/v6/npm-@ngtools-webpack-12.1.1-5377a5495b00f7f6d6d1b5c6f3cfeadbd3b9c96c-integrity/node_modules/@ngtools/webpack/package.json",
    "readmeFilename": "README.md",
    "readme": "# Angular Compiler Webpack Plugin\n\nWebpack 5.x plugin for the Angular Ahead-of-Time compiler. The plugin also supports Angular JIT mode.\n\n## Usage\n\nIn your webpack config, add the following plugin and loader.\n\n```typescript\nimport { AngularWebpackPlugin } from '@ngtools/webpack';\n\nexports = {\n  /* ... */\n  module: {\n    rules: [\n      {\n        test: /\\.[jt]sx?$/,\n        loader: '@ngtools/webpack',\n      },\n    ],\n  },\n\n  plugins: [\n    new AngularWebpackPlugin({\n      tsconfig: 'path/to/tsconfig.json',\n    }),\n  ],\n};\n```\n\nThe loader works with webpack plugin to compile the application's TypeScript. It is important to include both, and to not include any other TypeScript loader.\n\n## Options\n\n- `tsconfig` [default: `tsconfig.json`] - The path to the application's TypeScript Configuration file. In the `tsconfig.json`, you can pass options to the Angular Compiler with `angularCompilerOptions`. Relative paths will be resolved from the Webpack compilation's context.\n- `compilerOptions` [default: none] - Overrides options in the application's TypeScript Configuration file (`tsconfig.json`).\n- `jitMode` [default: `false`] - Enables JIT compilation and do not refactor the code to bootstrap. This replaces `templateUrl: \"string\"` with `template: require(\"string\")` (and similar for styles) to allow for webpack to properly link the resources.\n- `directTemplateLoading` [default: `true`] - Causes the plugin to load component templates (HTML) directly from the filesystem. This is more efficient if only using the `raw-loader` to load component templates. Do not enable this option if additional loaders are configured for component templates.\n- `fileReplacements` [default: none] - Allows replacing TypeScript files with other TypeScript files in the build. This option acts on fully resolved file paths.\n- `inlineStyleFileExtension` [default: none] - When set inline component styles will be processed by Webpack as files with the provided extension.\n",
    "licenseText": "The MIT License\n\nCopyright (c) 2017 Google, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/@ngtools/webpack/-/webpack-12.1.1.tgz#5377a5495b00f7f6d6d1b5c6f3cfeadbd3b9c96c",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/@ngtools/webpack/-/webpack-12.1.1.tgz",
    "hash": "5377a5495b00f7f6d6d1b5c6f3cfeadbd3b9c96c",
    "integrity": "sha512-NOHTBEjUkawQSU6sHA7EJSi5Ixw+oVmlYi17HXAhGRY1czasLQMiKQPnigbSgMLBR9Jhez7TttqAUtx6Pey2FQ==",
    "registry": "npm",
    "packageName": "@ngtools/webpack",
    "cacheIntegrity": "sha512-NOHTBEjUkawQSU6sHA7EJSi5Ixw+oVmlYi17HXAhGRY1czasLQMiKQPnigbSgMLBR9Jhez7TttqAUtx6Pey2FQ== sha1-U3elSVsA9/bW0bXG88/q29O5yWw="
  },
  "registry": "npm",
  "hash": "5377a5495b00f7f6d6d1b5c6f3cfeadbd3b9c96c"
}