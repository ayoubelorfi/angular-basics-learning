{
  "manifest": {
    "name": "karma-coverage",
    "version": "2.0.3",
    "description": "A Karma plugin. Generate code coverage.",
    "main": "lib/index.js",
    "scripts": {
      "lint": "eslint **/*.js",
      "test": "grunt"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/karma-runner/karma-coverage.git"
    },
    "keywords": [
      "karma-plugin",
      "karma-preprocessor",
      "karma-reporter",
      "coverage",
      "istanbul"
    ],
    "author": {
      "name": "SATO taichi",
      "email": "ryushi@gmail.com"
    },
    "dependencies": {
      "istanbul-lib-coverage": "^3.0.0",
      "istanbul-lib-instrument": "^4.0.1",
      "istanbul-lib-report": "^3.0.0",
      "istanbul-lib-source-maps": "^4.0.0",
      "istanbul-reports": "^3.0.0",
      "minimatch": "^3.0.4"
    },
    "license": "MIT",
    "devDependencies": {
      "@commitlint/cli": "^8.3.5",
      "@commitlint/travis-cli": "^8.3.5",
      "@commitlint/config-conventional": "^8.3.4",
      "@semantic-release/changelog": "5.0.1",
      "@semantic-release/git": "9.0.0",
      "@semantic-release/npm": "7.0.5",
      "chai": "^4.2.0",
      "eslint": "^6.5.1",
      "eslint-config-standard": "^14.1.0",
      "eslint-plugin-import": "^2.18.2",
      "eslint-plugin-node": "^10.0.0",
      "eslint-plugin-promise": "^4.2.1",
      "eslint-plugin-standard": "^4.0.1",
      "grunt": "^1.0.3",
      "grunt-bump": "^0.8.0",
      "grunt-cli": "^1.3.2",
      "grunt-conventional-changelog": "^6.1.0",
      "grunt-conventional-github-releaser": "^1.0.0",
      "grunt-karma": "^3.0.2",
      "grunt-npm": "^0.0.2",
      "grunt-simple-mocha": "^0.4.1",
      "husky": "^4.2.3",
      "ibrik": "^2.0.0",
      "karma": "^4.2.0",
      "karma-coffee-preprocessor": "1.x || ^0.3.0",
      "karma-firefox-launcher": "1.x || ^0.1.6",
      "karma-mocha": "1.x || ^0.2.0",
      "karma-requirejs": "1.x || ^0.2.2",
      "load-grunt-tasks": "^5.1.0",
      "mocha": "^6.0.2",
      "mocks": "0.0.15",
      "requirejs": "^2.1.20",
      "semantic-release": "17.0.4",
      "sinon": "^7.2.7",
      "sinon-chai": "^3.3.0"
    },
    "engines": {
      "node": ">=10.0.0"
    },
    "commitlint": {
      "extends": [
        "@commitlint/config-conventional"
      ]
    },
    "husky": {
      "hooks": {
        "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
      }
    },
    "contributors": [
      {
        "name": "dignifiedquire",
        "email": "dignifiedquire@gmail.com"
      },
      {
        "name": "Friedel Ziegelmayer",
        "email": "dignifiedquire@gmail.com"
      },
      {
        "name": "Aymeric Beaumet",
        "email": "aymeric@beaumet.me"
      },
      {
        "name": "johnjbarton",
        "email": "johnjbarton@johnjbarton.com"
      },
      {
        "name": "Mark Ethan Trostler",
        "email": "mark@zzo.com"
      },
      {
        "name": "Tim Kang",
        "email": "timkang@ucla.edu"
      },
      {
        "name": "hicom150",
        "email": "hicom150@gmail.com"
      },
      {
        "name": "Nick Malaguti",
        "email": "nmalaguti@palantir.com"
      },
      {
        "name": "Maksim Ryzhikov",
        "email": "rv.maksim@gmail.com"
      },
      {
        "name": "Mark Trostler",
        "email": "mark@zzo.com"
      },
      {
        "name": "nicojs",
        "email": "jansennico@gmail.com"
      },
      {
        "name": "Tanguy Krotoff",
        "email": "tkrotoff@gmail.com"
      },
      {
        "name": "Wei Kin Huang",
        "email": "weikin.huang04@gmail.com"
      },
      {
        "name": "Douglas Duteil",
        "email": "douglasduteil@gmail.com"
      },
      {
        "name": "Matt Winchester",
        "email": "m_winche@yahoo.com"
      },
      {
        "name": "Julen Garcia Leunda",
        "email": "hicom150@gmail.com"
      },
      {
        "name": "Allen Bierbaum",
        "email": "abierbaum@gmail.com"
      },
      {
        "name": "Michael Noack",
        "email": "michael.noack@sealink.com.au"
      },
      {
        "name": "Michael Stramel",
        "email": "m.stramel89@gmail.com"
      },
      {
        "name": "Nick Matantsev",
        "email": "nick.matantsev@gmail.com"
      },
      {
        "name": "Petar Manev",
        "email": "petar.manev2010@gmail.com"
      },
      {
        "name": "Robin Böhm",
        "email": "robinboehm@googlemail.com"
      },
      {
        "name": "Ron Derksen",
        "email": "ron.derksen@informaat.nl"
      },
      {
        "name": "Ruben Bridgewater",
        "email": "ruben.bridgewater@fintura.de"
      },
      {
        "name": "Sahat Yalkabov",
        "email": "sakhat@gmail.com"
      },
      {
        "name": "Srinivas Dhanwada",
        "email": "dhanwada.dev@gmail.com"
      },
      {
        "name": "Tanjo, Hiroyuki",
        "email": "expheno@gmail.com"
      },
      {
        "name": "Taylor Hakes",
        "email": "taylor@taylorhakes.com"
      },
      {
        "name": "Taylor McGann",
        "email": "tmcgann@users.noreply.github.com"
      },
      {
        "name": "Timo Tijhof",
        "email": "krinklemail@gmail.com"
      },
      {
        "name": "Tom Kirkpatrick",
        "email": "tom@systemseed.com"
      },
      {
        "name": "Tyler Waters",
        "email": "tyler.waters@gmail.com"
      },
      {
        "name": "Vincent Lemeunier",
        "email": "vincent.lemeunier+git@gmail.com"
      },
      {
        "name": "Yusuke Suzuki",
        "email": "utatane.tea@gmail.com"
      },
      {
        "name": "aprooks",
        "email": "alexander.prooks@gmail.com"
      },
      {
        "name": "carlos",
        "email": "cafesanu@gmail.com"
      },
      {
        "name": "fbergr",
        "email": "fbergr@gmail.com"
      },
      {
        "name": "piecyk",
        "email": "piecyk@gmail.com"
      },
      {
        "name": "Adam Heath",
        "email": "adam-h@users.noreply.github.com"
      },
      {
        "name": "terussell85",
        "email": "terussell85@gmail.com"
      },
      {
        "name": "Andrew Lane",
        "email": "AndrewLane@users.noreply.github.com"
      },
      {
        "name": "Chris Gladd",
        "email": "chris.m.gladd@gmail.com"
      },
      {
        "name": "Clayton Watts",
        "email": "cletusw@gmail.com"
      },
      {
        "name": "Dan Watling",
        "email": "dan@synaptik.com"
      },
      {
        "name": "Diogo Nicoleti",
        "email": "diogo.nicoleti@gmail.com"
      },
      {
        "name": "Dmitry Petrov",
        "email": "dpetroff@gmail.com"
      },
      {
        "name": "Greg Varsanyi",
        "email": "gvarsanyi@gmail.com"
      },
      {
        "name": "Ian Rufus",
        "email": "ian.j.rufus@gmail.com"
      },
      {
        "name": "James Talmage",
        "email": "james@talmage.io"
      },
      {
        "name": "Joseph Connolly",
        "email": "joec@avinetworks.com"
      },
      {
        "name": "Joshua Appelman",
        "email": "jappelman@xebia.com"
      },
      {
        "name": "Julie",
        "email": "ju.ralph@gmail.com"
      },
      {
        "name": "Kyle Welsby",
        "email": "kyle@mekyle.com"
      },
      {
        "name": "Lloyd Smith II",
        "email": "lloyd@trove.com"
      },
      {
        "name": "Maciej Rzepiński",
        "email": "maciej.rzepinski@gmail.com"
      },
      {
        "name": "Marceli.no",
        "email": "me@marceli.no"
      },
      {
        "name": "Matt Lewis",
        "email": "matthew.lewis@socialsignin.co.uk"
      }
    ],
    "_registry": "npm",
    "_loc": "/usr/src/app/.cache/yarn/v6/npm-karma-coverage-2.0.3-c10f4711f4cf5caaaa668b1d6f642e7da122d973-integrity/node_modules/karma-coverage/package.json",
    "readmeFilename": "README.md",
    "readme": "# karma-coverage\n\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square)](https://github.com/karma-runner/karma-coverage)\n [![npm version](https://img.shields.io/npm/v/karma-coverage.svg?style=flat-square)](https://www.npmjs.com/package/karma-coverage) [![npm downloads](https://img.shields.io/npm/dm/karma-coverage.svg?style=flat-square)](https://www.npmjs.com/package/karma-coverage)\n\n[![Build Status](https://img.shields.io/travis/karma-runner/karma-coverage/master.svg?style=flat-square)](https://travis-ci.org/karma-runner/karma-coverage) [![Dependency Status](https://img.shields.io/david/karma-runner/karma-coverage.svg?style=flat-square)](https://david-dm.org/karma-runner/karma-coverage) [![devDependency Status](https://img.shields.io/david/dev/karma-runner/karma-coverage.svg?style=flat-square)](https://david-dm.org/karma-runner/karma-coverage#info=devDependencies)\n\n> Generate code coverage using [Istanbul].\n\n## Installation\n\nThe easiest way is to install `karma-coverage` as a `devDependency`,\nby running\n\n```bash\nnpm install karma karma-coverage --save-dev\n```\n\n## Configuration\n\nFor configuration details see [docs/configuration](docs/configuration.md).\n\n## Examples\n\n### Basic\n\n```javascript\n// karma.conf.js\nmodule.exports = function(config) {\n  config.set({\n    files: [\n      'src/**/*.js',\n      'test/**/*.js'\n    ],\n\n    // coverage reporter generates the coverage\n    reporters: ['progress', 'coverage'],\n\n    preprocessors: {\n      // source files, that you wanna generate coverage for\n      // do not include tests or libraries\n      // (these files will be instrumented by Istanbul)\n      'src/**/*.js': ['coverage']\n    },\n\n    // optionally, configure the reporter\n    coverageReporter: {\n      type : 'html',\n      dir : 'coverage/'\n    }\n  });\n};\n```\n### CoffeeScript\n\nFor an example on how to use with [CoffeeScript](http://coffeescript.org/)\nsee [examples/coffee](examples/coffee). For an example of how to use with\nCoffeeScript and the RequireJS module loader, see\n[examples/coffee-requirejs](examples/coffee-requirejs) (and also see\nthe `useJSExtensionForCoffeeScript` option in\n[docs/configuration.md](docs/configuration.md)).\n\n### Advanced, multiple reporters\n\n```javascript\n// karma.conf.js\nmodule.exports = function(config) {\n  config.set({\n    files: [\n      'src/**/*.js',\n      'test/**/*.js'\n    ],\n    reporters: ['progress', 'coverage'],\n    preprocessors: {\n      'src/**/*.js': ['coverage']\n    },\n    coverageReporter: {\n      // specify a common output directory\n      dir: 'build/reports/coverage',\n      reporters: [\n        // reporters not supporting the `file` property\n        { type: 'html', subdir: 'report-html' },\n        { type: 'lcov', subdir: 'report-lcov' },\n        // reporters supporting the `file` property, use `subdir` to directly\n        // output them in the `dir` directory\n        { type: 'cobertura', subdir: '.', file: 'cobertura.txt' },\n        { type: 'lcovonly', subdir: '.', file: 'report-lcovonly.txt' },\n        { type: 'teamcity', subdir: '.', file: 'teamcity.txt' },\n        { type: 'text', subdir: '.', file: 'text.txt' },\n        { type: 'text-summary', subdir: '.', file: 'text-summary.txt' },\n      ]\n    }\n  });\n};\n```\n\n### FAQ\n\n#### Don't minify instrumenter output\n\nWhen using the istanbul instrumenter (default), you can disable code compaction by adding the following to your configuration.\n\n```javascript\n// karma.conf.js\nmodule.exports = function(config) {\n  config.set({\n    coverageReporter: {\n      instrumenterOptions: {\n        istanbul: { noCompact: true }\n      }\n    }\n  });\n};\n```\n\n----\n\nFor more information on Karma see the [homepage].\n\n\n[homepage]: http://karma-runner.github.com\n[Istanbul]: https://istanbul.js.org\n",
    "licenseText": "The MIT License\n\nCopyright (C) 2011-2013 Google, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/karma-coverage/-/karma-coverage-2.0.3.tgz#c10f4711f4cf5caaaa668b1d6f642e7da122d973",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/karma-coverage/-/karma-coverage-2.0.3.tgz",
    "hash": "c10f4711f4cf5caaaa668b1d6f642e7da122d973",
    "integrity": "sha512-atDvLQqvPcLxhED0cmXYdsPMCQuh6Asa9FMZW1bhNqlVEhJoB9qyZ2BY1gu7D/rr5GLGb5QzYO4siQskxaWP/g==",
    "registry": "npm",
    "packageName": "karma-coverage",
    "cacheIntegrity": "sha512-atDvLQqvPcLxhED0cmXYdsPMCQuh6Asa9FMZW1bhNqlVEhJoB9qyZ2BY1gu7D/rr5GLGb5QzYO4siQskxaWP/g== sha1-wQ9HEfTPXKqqZosdb2QufaEi2XM="
  },
  "registry": "npm",
  "hash": "c10f4711f4cf5caaaa668b1d6f642e7da122d973"
}