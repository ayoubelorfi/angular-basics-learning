{
  "manifest": {
    "name": "zone.js",
    "version": "0.11.4",
    "description": "Zones for JavaScript",
    "main": "./bundles/zone.umd.js",
    "module": "./fesm2015/zone.js",
    "es2015": "./fesm2015/zone.js",
    "fesm2015": "./fesm2015/zone.js",
    "typings": "./zone.d.ts",
    "dependencies": {
      "tslib": "^2.0.0"
    },
    "devDependencies": {
      "@externs/nodejs": "^1.5.0",
      "@types/node": "^10.9.4",
      "domino": "2.1.2",
      "jest": "^26.4",
      "google-closure-compiler": "^20200927.0.0",
      "mocha": "^3.1.2",
      "mock-require": "3.0.3",
      "promises-aplus-tests": "^2.1.2",
      "typescript": "4.1.2"
    },
    "scripts": {
      "closuretest": "./scripts/closure/closure_compiler.sh",
      "electrontest": "cd test/extra && node electron.js",
      "jest:test": "jest --config ./test/jest/jest.config.js ./test/jest/jest.spec.js",
      "jest:nodetest": "jest --config ./test/jest/jest.node.config.js ./test/jest/jest.spec.js",
      "promisetest": "tsc -p . && node ./test/promise/promise-test.js",
      "promisefinallytest": "tsc -p . && mocha ./test/promise/promise.finally.spec.js"
    },
    "repository": {
      "type": "git",
      "url": "git://github.com/angular/angular.git",
      "directory": "packages/zone.js"
    },
    "publishConfig": {
      "registry": "https://wombat-dressing-room.appspot.com"
    },
    "author": {
      "name": "Brian Ford"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/angular/angular/issues"
    },
    "_registry": "npm",
    "_loc": "/usr/src/app/.cache/yarn/v6/npm-zone-js-0.11.4-0f70dcf6aba80f698af5735cbb257969396e8025-integrity/node_modules/zone.js/package.json",
    "readmeFilename": "README.md",
    "readme": "# Zone.js\n\n[![CDNJS](https://img.shields.io/cdnjs/v/zone.js.svg)](https://cdnjs.com/libraries/zone.js)\n\nImplements _Zones_ for JavaScript, inspired by [Dart](https://dart.dev/articles/archive/zones).\n\n> If you're using zone.js via unpkg (i.e. using `https://unpkg.com/zone.js`)\n> and you're using any of the following libraries, make sure you import them first\n\n> * 'newrelic' as it patches global.Promise before zone.js does\n> * 'async-listener' as it patches global.setTimeout, global.setInterval before zone.js does\n> * 'continuation-local-storage' as it uses async-listener\n\n# NEW Zone.js POST-v0.6.0\n\nSee the new API [here](./lib/zone.ts).\n\nRead up on [Zone Primer](https://docs.google.com/document/d/1F5Ug0jcrm031vhSMJEOgp1l-Is-Vf0UCNDY-LsQtAIY).\n\n# BREAKING CHANGES since Zone.js v0.11.1\n\nPrior to `v0.11.1`, Zone.js provided two distribution bundle formats in the `dist` folder.\nThey were (1) `ES5` bundle distributed as `zone.js` and (2) `ES2015` bundle distributed as `zone-evergreen.js`.\nBoth of these bundles were in `UMD` format, and are used for Angular's differential-loading mechanism.\n\nStarting with `v0.11.1`, Zone.js follows the [Angular Package Format](https://docs.google.com/document/d/1CZC2rcpxffTDfRDs6p1cfbmKNLA6x5O-NtkJglDaBVs). Therefor the new Zone.js file layout is:\n\n- `bundles`: `ES5` bundle in `UMD` format.\n- `fesm2015`: `ES5` bundle in `ESM` format.\n- `dist`: `ES5` bundle in `UMD` format. This directory is present to keep backward compatibility.\n\nIf you are using `Angular CLI`, the `polyfills.ts` file will contain:\n\n```\nimport 'zone.js/dist/zone';\n```\n\nStarting with Zone.js `v0.11.1+` the import changes to:\n\n```\nimport 'zone.js';\n```\n\nPrior to `v0.11.1` the import would load the `ES5` bundle in `UMD` format from `dist/zone.js`. \nStarting with `v0.11.1` the import loads the `ES2015` bundle in `ESM` format instead.\n\nThis is a breaking change for legacy browsers such as `IE11`.\n\nFor backwards compatibility `zone.js` continues to distribute the same bundles under `dist`.\nTo restore the old behavior import from the `dist` directory instead like so:\n\n```\nimport 'zone.js/dist/zone';\n```\n\nFor details, please refer the [changelog](./CHANGELOG.md) and the [PR](https://github.com/angular/angular/pull/36540).\n\n## What's a Zone?\n\nA Zone is an execution context that persists across async tasks.\nYou can think of it as [thread-local storage](https://en.wikipedia.org/wiki/Thread-local_storage) for JavaScript VMs.\n\nSee this video from ng-conf 2014 for a detailed explanation:\n\n[![screenshot of the zone.js presentation and ng-conf 2014](./presentation.png)](//www.youtube.com/watch?v=3IqtmUscE_U&t=150)\n\n## See also\n* [async-listener](https://github.com/othiym23/async-listener) - a similar library for node\n* [Async stack traces in Chrome](https://www.html5rocks.com/en/tutorials/developertools/async-call-stack/)\n* [strongloop/zone](https://github.com/strongloop/zone) (Deprecated)\n* [vizone](https://github.com/gilbox/vizone) - control flow visualizer that uses zone.js\n\n## Standard API support\n\nzone.js patched most standard web APIs (such as DOM events, `XMLHttpRequest`, ...) and nodejs APIs\n(`EventEmitter`, `fs`, ...), for more details, please see [STANDARD-APIS.md](STANDARD-APIS.md).\n\n## Nonstandard API support\n\nWe are adding support to some nonstandard APIs, such as MediaQuery and\nNotification. Please see [NON-STANDARD-APIS.md](NON-STANDARD-APIS.md) for more details.\n\n## Examples\n\nYou can find some samples to describe how to use zone.js in [SAMPLE.md](SAMPLE.md).\n\n## Modules\n\nzone.js patches the async APIs described above, but those patches will have some overhead.\nStarting from zone.js v0.8.9, you can choose which web API module you want to patch.\nFor more details, please\nsee [MODULE.md](MODULE.md).\n\n## Bundles\n\nStarting with `v0.11.0`, `zone.js`  uses `Angular Package Format` for bundle distribution.\n(For backwards compatibility, all bundles can still be accessed from `dist` folder.)\n\n|Bundle|Summary|\n|---|---|\n|`zone.js`| The default bundle. Contains the most used APIs such as `setTimeout/Promise/EventTarget...`, it also supports differential loading by importing  this bundle using `import zone.js`.  In legacy browsers it includes some additional patches such as `registerElement` and `EventTarget` like APIs.|\n|`zone-testing.js`| The bundle for zone testing support of `jasmine` / `mocha` / `jest`. Also includes test utility functions `async` / `fakeAsync` / `sync`.|\n|`zone-node.js`|The NodeJS support bundle.|\n|`zone-mix.js`|A mixed bundle which supports both browser and NodeJS. Useful for mixed environment such as Electron.|\n|`zone-externs.js`|the API definitions for `closure compiler`.|\n\nAdditional optional patches not included in the `zone.js` bundles which extend functionality.\nThe additional bundles can  be found under `zone.js/plugins` folder.\nTo use these bundles, add the following code after importing zone.js bundle.\n\n```\nimport 'zone.js';\n// For example, import canvas patch\nimport 'zone.js/plugins/zone-patch-canvas';\n```\n\n|Patch|Summary|\n|---|---|\n|`webapis-media-query.js`|patch for `MediaQuery APIs`|\n|`webapis-notification.js`|patch for `Notification APIs`|\n|`webapis-rtc-peer-connection.js`|patch for `RTCPeerConnection APIs`|\n|`webapis-shadydom.js`|patch for `Shady DOM APIs`|\n|`zone-bluebird.js`|patch for `Bluebird APIs`|\n|`zone-error.js`|patch for `Error Global Object`, supports adding zone information to stack frame, and also removing unrelated stack frames from `zone.js` internally|\n|`zone-patch-canvas.js`|patch for `Canvas API`|\n|`zone-patch-cordova.js`|patch for `Cordova API`|\n|`zone-patch-electron.js`|patch for `Electron API`|\n|`zone-patch-fetch.js`|patch for `Fetch API`|\n|`zone-patch-jsonp.js`|helper utility for `jsonp API`|\n|`zone-patch-resize-observer.js`|patch for `ResizeObserver API`|\n|`zone-patch-rxjs.js`|patch for `rxjs API`|\n|`zone-patch-rxjs-fake-async.js`|patch for `rxjs fakeasync test`|\n|`zone-patch-socket-io.js`|patch for `socket-io`|\n|`zone-patch-user-media.js`|patch for `UserMedia API`|\n|`zone-patch-message-port.js`|patch for `MessagePort API`|\n\n## Promise A+ test passed\n[![Promises/A+ 1.1 compliant](https://promisesaplus.com/assets/logo-small.png)](https://promisesaplus.com/)\n\n## License\nMIT",
    "licenseText": "The MIT License\n\nCopyright (c) 2010-2020 Google LLC. https://angular.io/license\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/zone.js/-/zone.js-0.11.4.tgz#0f70dcf6aba80f698af5735cbb257969396e8025",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/zone.js/-/zone.js-0.11.4.tgz",
    "hash": "0f70dcf6aba80f698af5735cbb257969396e8025",
    "integrity": "sha512-DDh2Ab+A/B+9mJyajPjHFPWfYU1H+pdun4wnnk0OcQTNjem1XQSZ2CDW+rfZEUDjv5M19SBqAkjZi0x5wuB5Qw==",
    "registry": "npm",
    "packageName": "zone.js",
    "cacheIntegrity": "sha512-DDh2Ab+A/B+9mJyajPjHFPWfYU1H+pdun4wnnk0OcQTNjem1XQSZ2CDW+rfZEUDjv5M19SBqAkjZi0x5wuB5Qw== sha1-D3Dc9quoD2mK9XNcuyV5aTlugCU="
  },
  "registry": "npm",
  "hash": "0f70dcf6aba80f698af5735cbb257969396e8025"
}